body {
    background-color: lightgray; /* Light gray background  rgb(129, 193, 245);*/
    color: #333333; /* Dark gray text for readability */
    font-family: 'Roboto', Arial, sans-serif; /* Clean, professional font */
    font-size: 16px; /* Standard text size for readability */
    line-height: 1.6; /* Good line spacing for readability */
}

h1, h2, h3 {
    color: rgb(0, 0, 0); /* Darker shade for headings */
    font-family: 'Helvetica', Arial, sans-serif; /* Use a slightly different font for emphasis */
    font-weight: 600; /* Bold headings */
}

a {
    color: #2980b9; /* Blue for links */
    text-decoration: none;
}

a:hover {
    color: #3498db; /* Lighter blue when hovering */
    text-decoration: underline;
}

/* Keep manual controller's dimensions and position */
.controller-container {
    position: flex;
    right: 20px; /* Fixed to the right side */
    top: 100px; /* Vertically aligned */
    padding: 15px;
    border: 2px solid #dfdfdf;
    border-radius: 10px;
    width: 250px;
    background-color: rgb(255, 255, 255);
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 1; /* Ensure it stays above other elements */
}

.controller-title {
    font-size: 18px;
    font-weight: bold;
    color: black;
    margin-bottom: 20px;
    text-align: center;
}

.controls {
    display: flex;
    justify-content: space-between;
    width: 100%;
    margin-bottom: 20px;
    align-items: center;
}

.control-button {
    padding: 15px 25px;
    font-size: 16px;
    background-color: rgb(0, 136, 247);
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.2s;
}

.control-button:hover {
    background-color: rgb(90, 175, 245)
}

.control-button:active {
    transform: scale(0.95);  /* Button shrinks slightly when clicked */
    background-color: #ddd; 
}

/* Class to simulate a clicked button when using keyboard events */
.control-button.clicked {
    transform: scale(0.95);
    background-color: #ddd;
}

.lever-and-slider {
    display: flex; 
    flex-direction: row; 
    align-items: center; 
    gap: 20px;
}

/* Lever styles */
.lever-container {
    position: relative;
    width: 30px;
    height: 150px;
    background-color: #ddd;
    border-radius: 25px;
    margin-bottom: 15px;
}

.lever {
    width: 30px;
    height: 30px;
    background-color: #333;
    border-radius: 50%;
    position: absolute;
    bottom: 0;
    cursor: pointer;
    transition: background-color 0.3s;
}

.lever:active {
    background-color: #666;
}

#lever-status {
    font-size: 16px;
    margin-top:-20px;
    margin-bottom:5px;
    color: #333;
}

#lever-coords {
    font-size: 16px;
    margin-top:-20px;
    margin-bottom:-20px;
    color: #333;
}

/* Container for received data, distance measurements, and command log */
.data-container {
    flex: 1;  /* Equal width */
    flex-direction: row;  /* Arrange items in a row */
    justify-content: space-between; /* Space them evenly */
    align-items: stretch;  /* Ensure same height */
    gap: 10px;  /* Add spacing between the sections */
    width: 100%;  /* Full width usage */
    margin-top: 20px;
}

/* Each section takes up exactly one-third */
.received-data-window,
.distance-window,
output-window {
    flex: 0.5;  /* Equal width */
    min-height: 200px;  /* Adjust as needed */
    overflow-y: auto;  /* Allow scrolling if needed */
    background-color: rgb(0, 0, 0);
    border-radius: 10px;
    padding: 10px;
    color: rgb(255, 255, 255);
    font-size: 14px;
    text-align: left;
}

/* Borders for clarity */
.received-data-window { border: 2px solid #dfdfdf; }
.distance-window { border: 2px solid #dfdfdf; }
.output-window { border: 2px solid #dfdfdf; }

#output-log {
    height: 100%;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}

/* Each log entry */
.log-entry {
    padding: 5px;
    font-family: 'Courier New', monospace;
    font-weight: bold;
}

/* Received Data Window */
.received-data-window {
    width: 100%;
    flex: 1;                /* Each takes equal space */
    min-height: 200px;      /* Adjust height as needed */
    overflow-y: auto;       /* Keeps scrolling if content overflows */
    height: auto;
    background-color: white; /* Ensure background is white */
    border-radius: 10px;
    padding: 10px;
    color: black; /* Ensure all text is black */
    font-size: 14px;
    text-align: left;
    margin-top: 10px;
}

/* Distance Window */
.distance-window {
    flex: 1;                /* Each takes equal space */
    min-height: 200px;      /* Adjust height as needed */
    overflow-y: auto;       /* Keeps scrolling if content overflows */
    width: 100%;
    height: auto;
    background-color: rgb(255, 255, 255);
    border-radius: 10px;
    padding: 10px;
    color: white;
    font-size: 14px;
    text-align: left;
    margin-top: 10px;
}

/* Output window */
.output-window {
    flex: 1;                /* Each takes equal space */
    min-height: 200px;      /* Adjust height as needed */
    overflow-y: auto;       /* Keeps scrolling if content overflows */
    width: 100%;
    height: auto;
    background-color: rgb(255, 255, 255);
    border-radius: 10px;
    padding: 10px;
    color: white;
    font-size: 14px;
    text-align: left;
    margin-top: 10px;
}

/* Flex container for horizontal alignment */
.flex-container {
    display: flex;
    flex-direction: row; /* Align items in a row */
    justify-content: space-evenly; /* Distribute items evenly */
    align-items: center; /* Align items vertically in the center */
    gap: 20px; /* Add spacing between elements */
    padding: 20px;
}

/* Map container styling */
.map-container {
    flex: 0.6; /* Take up equal space */
    text-align: center;
}

#map {
    width: 100%; /* Ensure full width within container */
    height: 400px; /* Fixed height for the map */
    border: 2px solid #dfdfdf;
    border-radius: 10px;
}

/* Video container styling */
.video-container {
    flex: 1; /* Take up equal space */
    text-align: center;
}

#video-feed {
    width: 100%; /* Ensure full width within container */
    height: auto; /* Maintain aspect ratio */
    border: 2px solid #dfdfdf;
    border-radius: 10px;
}

.coordinate-input {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

.coordinate-input label {
    font-size: 16px;
    color: black;
}

.coordinate-input input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    margin-top: 10px;
    margin-bottom: 10px;
    font-size: 14px;
}

.coordinate-input button {
    width: 100%;
}

/* Data section now in a row */
.data-container {
    display: flex;          /* Enables flexbox */
    justify-content: space-between;  /* Even spacing */
    gap: 10px;              /* Adds spacing between the boxes */
    width: 100%;            /* Ensures full width usage */
}

/* Ensure the widget container is visible */
#widget {
    display: block;
    border: 1px solid rgb(224, 223, 223);
}

/* Markerbounds (Gray inner border) */
#markerbounds {
    width: 180px;
    height: 180px;
    position: relative;
    background-color: lightgray;
}

/* Box (Slider background) */
#box {
    width: 150px;
    height: 150px;
    background-color: #ddd;
    position: absolute;
    top: 15px;
    left: 15px;
}

/* Marker (Draggable dot) */
#marker {
    width: 20px;
    height: 20px;
    background-color: #333;
    border-radius: 50%;
    position: absolute;
    top: 75px;
    left: 75px;
}
  
#coord {
    font-family: serif;
    font-size: 14px;
    margin: 0px;
}

/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
  }
  
  /* Hide default HTML checkbox */
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
/* Switch configurable variables */
:root {
    --switch-width: 60px;
    --switch-height: 30px;
    --slider-size: calc(var(--switch-height) - 8px);
    --slider-offset: 4px;
}

/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: var(--switch-width);
    height: var(--switch-height);
}

/* Hide default HTML checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: var(--switch-height);
}

.slider:before {
    position: absolute;
    content: "";
    height: var(--slider-size);
    width: var(--slider-size);
    left: var(--slider-offset);
    bottom: var(--slider-offset);
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: rgb(33, 150, 243);
}

input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
    transform: translateX(calc(var(--switch-width) - var(--slider-size) - (2 * var(--slider-offset))));
}

.control-switch {
    display: flex;
    gap: 10px; 
}